name: Tetris CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        zig-version: [0.14.1]
        target-arch: [native, aarch64]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Cache Zig
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/zig
            ~/.zig
          key: ${{ runner.os }}-zig-${{ matrix.zig-version }}-${{ hashFiles('build.zig.zon') }}
          restore-keys: |
            ${{ runner.os }}-zig-${{ matrix.zig-version }}-

      - name: Cache raylib
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/libraylib*
          key: ${{ runner.os }}-raylib-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: ${{ matrix.zig-version }}

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install raylib

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev
          git clone https://github.com/raysan5/raylib.git raylib
          cd raylib
          mkdir build && cd build
          cmake -DBUILD_SHARED_LIBS=ON ..
          make
          sudo make install
          sudo ldconfig

      - name: Build
        run: zig build

      - name: Run tests
        run: zig build test
